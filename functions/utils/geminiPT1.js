const { GoogleGenerativeAI } = require("@google/generative-ai");
const genAI = new GoogleGenerativeAI(process.env.API_KEY);

const textOnly = async (prompt) => {
  // For text-only input, use the gemini-pro model
  const model = genAI.getGenerativeModel({ model: "tunedModels/lineoaxgemini-i6k79b8lw9xl" });
  const result = await model.generateContent(prompt);
  return result.response.text();
};

const multimodal = async (imageBinary) => {
  // For text-and-image input (multimodal), use the gemini-pro-vision model
  const model = genAI.getGenerativeModel({ model: "gemini-pro-vision" });
  const prompt = "อธิบายภาพนี้ในเชิงวิชาการ";
  const mimeType = "image/png";

  // Convert image binary to a GoogleGenerativeAI.Part object.
  const imageParts = [
    {
      inlineData: {
        data: Buffer.from(imageBinary, "binary").toString("base64"),
        mimeType
      }
    }
  ];

  const result = await model.generateContent([prompt, ...imageParts]);
  const text = result.response.text();
  return text;
};

// เก็บ history ไว้ในตัวแปรภายนอก
let history = [
  {
    role: "user",
    parts: [{ text: "สวัสดีจ้า" }],
  },
  {
    role: "model",
    parts: [{ text: "สวัสดีเราคือ LineOAxGemini" }],
  },
  {
    role: "user",
    parts: [
      {text: "กลุ่มวิชาเอกบังคับของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ มีกี่หน่วยกิต"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "กลุ่มวิชาเอกบังคับจำนวน 58 หน่วยกิต"},
    ],
  },
  {
    role: "user",
    parts: [{ text: "กลุ่มวิชาเอกบังคับของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ได้แก่ อะไรบ้าง" }],
  },
  {
    role: "model",
    parts: [{ text: "กลุ่มวิชาเอกบังคับจำนวน 58 หน่วยกิต รหัสวิชา 100007 กฎหมายและจริยธรรมทางคอมพิวเตอร์  Computer Laws and Ethics หน่วยกิต 1(1-0-2) รหัสวิชา 146200 ภาษาอังกฤษเพื่อวัตถุประสงค์เฉพาะ English for Specific Purposes หน่วยกิต 1 3(3-0-6) รหัสวิชา 226111 หลักการแก้ปัญหาและการเขียนโปรแกรมเบื้องต้น หน่วยกิต 3(2-2-5) Principles of Problem Solving and Basic Programming รหัสวิชา 226121 การออกแบบระบบดิจิทัล Digital System Design หน่วยกิต 4(3-3-8) รหัสวิชา 226342 ไมโครโพรเซสเซอร์และการเชื่อมต่อ หน่วยกิต 4(3-3-8) Microprocessor and Interfacing รหัสวิชา 226241 โครงสร้างและสถาปัตยกรรมคอมพิวเตอร์ หน่วยกิต 3(2-2-5) Computer Architecture and Organization รหัสวิชา 226291 โครงสร้างข้อมูล หน่วยกิต 3(2-2-5) Data Structures รหัสวิชา 226292 การจำลองและการเขียนโปรแกรมเชิงวัตถุ หน่วยกิต 3(2-2-5) Object-Oriented Modeling and Programming รหัสวิชา 226213 คณิตศาสตร์เต็มหน่วยส าหรับวิศวกรคอมพิวเตอร์ หน่วยกิต 3(3-0-6) Discrete Mathematics for Computer Engineers รหัสวิชา 226314 การวิเคราะห์และการออกแบบขั้นตอนวิธี หน่วยกิต 3(2-2-5) Algorithm Analysis and Design รหัสวิชา 226351 คอมพิวเตอร์และการสื่อสารข้อมูล หน่วยกิต 3(2-2-5) Computer and Data Communications รหัสวิชา 226352 หลักการเครือข่ายคอมพิวเตอร์ หน่วยกิต 3(2-3-6) Principles of Computer Networks รหัสวิชา 226381 โครงงานด้านวิศวกรรมคอมพิวเตอร์1 หน่วยกิต 1(0-3-2) Computer Engineering Project I รหัสวิชา 226393 ระบบปฏิบัติการ หน่วยกิต 3(2-2-5) Operating System รหัสวิชา 226394 ปัญญาประดิษฐ์ หน่วยกิต 3(2-2-5) Artificial Intelligence รหัสวิชา 226395 ระบบจัดการฐานข้อมูล หน่วยกิต 3(2-2-5) Database Management System รหัสวิชา 226396 วิศวกรรมซอฟต์แวร์ หน่วยกิต 3(2-2-5) Software Engineering รหัสวิชา 226453 ปฏิบัติการเครือข่ายคอมพิวเตอร์ขั้นสูง หน่วยกิต 1(0-3-2) Advanced Computer Networks Laboratory รหัสวิชา 226482 โครงงานด้านวิศวกรรมคอมพิวเตอร์ 2 หน่วยกิต 2(0-6-3) Computer Engineering Project II รหัสวิชา 226483* การฝึกงาน 6 หน่วยกิต Professional Training รหัสวิชา 226484* สหกิจศึกษา 6 หน่วยกิต Co-Operative Education" }],
  },
  {
    role: "user",
    parts: [
      {text: "นิสิตของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ สามารถลงทะเบียนเรียนด้วยตนเองผ่านช่องทางใด"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "ระบบลงทะเบียนออนไลน์ www.reg.up.ac.th"},
    ],
  },
  {
    role: "user",
    parts: [
      {text: "การลงทะเบียนเรียนแบบปกติ ของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ ทำได้อย่างไร"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "นิสิตลงทะเบียนเรียนด้วยตนเอง โดยเลือกรายวิชา หมู่เรียน และตรวจสอบให้ ถูกต้องก่อนยืนยันการลงทะเบียนเรียน ผ่านระบบลงทะเบียนออนไลน์ www.reg.up.ac.th ตามกำหนดปฏิทินการศึกษาของมหาวิทยาลัย และ นิสิตต้องพิมพ์ใบแจ้งการชำระเงิน ไว้เป็นหลักฐาน ทั้งนี้ เมื่อนิสิตยืนยันการลงทะเบียนเรียนไปแล้ว จะไม่สามารถลงทะเบียน เรียนเพิ่มรายวิชาได้ หากนิสิตประสงค์จะลงทะเบียนเพิ่ม – ถอนรายวิชา ภายหลังการ ยืนยันลงทะเบียนเรียน จะสามารถดำเนินการได้อีกครั้ง ผ่านระบบลงทะเบียนออนไลน์ www.reg.up.ac.th เมื่อถึงกำหนดระยะเวลาลงทะเบียนล่าช้า เพิ่ม-ถอนรายวิชา ตาม กำหนดปฏิทินการศึกษา"},
    ],
  },
  {
    role: "user",
    parts: [
      {text: "การลงทะเบียนเรียนล่าช้า ของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ ทำได้อย่างไร"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "นิสิตที่ไม่ได้ลงทะเบียนเรียนในกำหนดลงทะเบียนเรียนปกติ สามารถทำการ ลงทะเบียนล่าช้าได้ ภายใน 2 สัปดาห์แรกนับจากวันเปิดเรียน โดยต้องเสียค่าปรับ ตามประกาศฯ สำหรับภาคฤดูร้อน ให้ทำการได้ภายในสัปดาห์แรกนับจากวันเปิดเรียน โดย ลงทะเบียนเรียนผ่านอินเทอร์เน็ตเหมือนการลงทะเบียนเรียนปกติทั้งนี้ตามกำหนดปฏิทิน การศึกษา ค่าปรับการลงทะเบียนเรียนล่าช้า โดยนับตั้งแต่วันเปิดภาคเรียน ดังนี้ \n1.2.1 ระดับปริญญาตรี ปรับวันละ 25 บาท \n1.2.2 ระดับปริญญาโท ปรับวันละ 50 บาท"},
    ],
  },
  {
    role: "user",
    parts: [
      {text: "การเพิ่ม -ถอนรายวิชา หรือเปลี่ยนหมู่เรียน ของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ ทำได้อย่างไร"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "นิสิตสามารถทำการเพิ่ม- ถอนรายวิชา หรือเปลี่ยนหมู่เรียนได้จนกว่าจะพอใจ ภายใน 2 สัปดาห์แรกนับจากวันเปิดเรียน ทั้งนี้ ตามกำหนดปฏิทินการศึกษา แล้วจึงพิมพ์ ใบแจ้งการชำระเงิน ไปชำระเงินที่ธนาคารตามกำหนด ทั้งนี้ จะถอนรายวิชาได้เท่ากับจำนวนหน่วยกิตต่ำสุดที่กำหนดให้ลงทะเบียน"},
    ],
  },
  {
    role: "user",
    parts: [
      {text: "การลงทะเบียนรักษาสภาพการเป็นนิสิต ของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ ทำได้อย่างไร"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "ลงทะเบียนยืนยันการรักษาสภาพการเป็นนิสิต ผ่านระบบ www.reg.up.ac.th เมื่อ นิสิตไม่มีความประสงค์จะเรียนในภาคการศึกษา นั้นๆ หรือไม่มีรายวิชาที่ต้องลงทะเบียนเรียน แล้ว จึงพิมพ์ใบแจ้งการชำระเงิน ไปชำระเงินที่ธนาคารตามกำหนด ค่าลงทะเบียนรักษาสภาพการเป็นนิสิต\n - ระดับปริญญาตรี ภาคการศึกษาต้น ค่าธรรมเนียม 310 บาท ภาคเรียนศึกษาปลาย, ฤดูร้อน ค่าธรรมเนียม 150 บาท \n- ระดับบัณฑิตศึกษา ภาคการศึกษาต้น ค่าธรรมเนียม 735 บาท ภาคเรียนศึกษาปลาย, ฤดูร้อน ค่าธรรมเนียม 500 บาท \n*ทั้งนี้ นิสิตต้องยื่นคำร้องขอลาพักการศึกษาต่อมหาวิทยาลัยด้วย*\n"},
    ],
  },
  {
    role: "user",
    parts: [
      {text: "นิสิตของมหาวิทยาลัยพะเยา คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ จะลงทะเบียนเรียนได้มีเงื่อนไขใดบ้าง"},
    ],
  },
  {
    role: "model",
    parts: [
      {text: "เงื่อนไขการลงทะเบียนเรียนของนิสิต คณะเทคโนโลยีสารสนเทศและการสื่อสาร สาขาวิศวกรรมคอมพิวเตอร์ มหาวิทยาลัยพะเยา\n1. มีสถานภาพการเป็นนิสิต โดย\n    - ไม่พ้นสภาพการเป็นนิสิต\n    - ไม่ลาพักการศึกษา\n    - ไม่ถูกพักการศึกษา\n    - ไม่ถูกให้ออกจากมหาวิทยาลัย\n2. ชำระค่าธรรมเนียมการลงทะเบียนเรียน\n3. ปฏิบัติตามระเบียบและข้อบังคับของมหาวิทยาลัย\n4. ลงทะเบียนเรียนภายในวันที่มหาวิทยาลัยกำหนด\n5. มีผลการเรียนเป็นไปตามเกณฑ์ที่มหาวิทยาลัยกำหนด (สำหรับนิสิตชั้นปีที่ 2 ขึ้นไป)\n6. ลงทะเบียนเรียนตามหลักสูตรและแผนการศึกษาที่มหาวิทยาลัยกำหนด\n       ทั้งนี้นิสิตจะลงทะเบียนเรียนได้ นิสิตต้องมีที่นั่งในรายวิชาที่มีความประสงค์ จะลงทะเบียนเรียน กรณี นิสิตไม่มีที่นั่งในรายวิชาที่ต้องการลงทะเบียนเรียน ให้นิสิต ดำเนินการ ดังนี้ \nนิสิตยื่นความประสงค์ลงทะเบียนเรียนรายวิชา (UP 20.1) ผ่านระบบบริการการศึกษา (www.reg.up.ac.th) ตรวจสอบและให้ความเห็นชอบ UP 20.1 \nนิสิต ลงทะเบียน/ลงทะเบียนเพิ่มรายวิชา ด้วยตนเอง ผ่านระบบบริการการศึกษา (www.reg.up.ac.th) ภายในกำหนดปฏิทินการศึกษาของมหาวิทยาลัย\n"},
    ],
  },
];

const chat = async (prompt) => {
  // เพิ่มข้อความของผู้ใช้ใหม่เข้าไปใน history
  history.push({
    role: "user",
    parts: [{ text: prompt }],
  });

  const model = genAI.getGenerativeModel({ model: "tunedModels/lineoaxgemini-i6k79b8lw9xl" });
  const chatInstance = model.startChat({ history });

  const result = await chatInstance.sendMessage(prompt);

  // เพิ่มข้อความตอบกลับจากโมเดลเข้าไปใน history
  history.push({
    role: "model",
    parts: [{ text: result.response.text() }],
  });

  return result.response.text();
};

module.exports = { textOnly, multimodal, chat };